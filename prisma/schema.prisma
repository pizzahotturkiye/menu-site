// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id          String     @id @default(cuid())
  name        String
  nameTr      String     @map("name_tr")
  description String?
  descriptionTr String?  @map("description_tr")
  image       String?
  order       Int        @default(0)
  isActive    Boolean    @default(true) @map("is_active")
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  
  menuItems   MenuItem[]

  @@map("categories")
}

model MenuItem {
  id            String     @id @default(cuid())
  name          String
  nameTr        String     @map("name_tr")
  description   String?
  descriptionTr String?    @map("description_tr")
  price         Float
  image         String?
  isActive      Boolean    @default(true) @map("is_active")
  isVegetarian  Boolean    @default(false) @map("is_vegetarian")
  isVegan       Boolean    @default(false) @map("is_vegan")
  isGlutenFree  Boolean    @default(false) @map("is_gluten_free")
  categoryId    String     @map("category_id")
  order         Int        @default(0)
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")
  
  category      Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  ingredients   MenuItemIngredient[]

  @@map("menu_items")
}

model Ingredient {
  id          String     @id @default(cuid())
  name        String     @unique
  nameTr      String     @unique @map("name_tr")
  allergen    Boolean    @default(false)
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  
  menuItems   MenuItemIngredient[]

  @@map("ingredients")
}

model MenuItemIngredient {
  id           String     @id @default(cuid())
  menuItemId   String     @map("menu_item_id")
  ingredientId String     @map("ingredient_id")
  
  menuItem     MenuItem   @relation(fields: [menuItemId], references: [id], onDelete: Cascade)
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)

  @@unique([menuItemId, ingredientId])
  @@map("menu_item_ingredients")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}
